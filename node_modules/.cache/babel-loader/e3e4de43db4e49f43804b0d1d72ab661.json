{"ast":null,"code":"var _jsxFileName = \"/Users/sungapark/Documents/Project/lvl/lvl-ui/src/views/Tracks/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { useQuery, useQueryClient } from 'react-query';\nimport { Box, Typography, InputAdornment, InputBase } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Search, StyledDataGrid } from '../../components';\nimport debounce from 'lodash.debounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tracks() {\n  _s();\n\n  const queryClient = useQueryClient();\n  const queryName = 'userData';\n  const [search, setSearch] = useState('');\n\n  const handleTrackSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  const {\n    data1\n  } = useQuery([queryName, search], () => {\n    console.log(search);\n    var url = new URL('http://localhost:3000/tracks');\n    url.search = new URLSearchParams({\n      name: search\n    }).toString();\n    return fetch(url);\n  });\n  const data = [];\n  const columns = [{\n    field: 'id',\n    hide: true\n  }, {\n    field: 'title',\n    headerName: 'Title',\n    flex: 1\n  }, {\n    field: 'albumId',\n    hide: true\n  }, {\n    field: 'mediaTypeId',\n    hide: true\n  }, {\n    field: 'genreId',\n    hide: true\n  }, {\n    field: 'composer',\n    hide: true\n  }, {\n    field: 'duration',\n    headerName: 'Duration',\n    width: 200\n  }, {\n    field: 'size',\n    headerName: 'Size'\n  }, {\n    field: 'price',\n    hide: true\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      my: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      my: 2,\n      sx: {\n        backgroundColor: 'white',\n        borderRadius: '4px'\n      },\n      children: /*#__PURE__*/_jsxDEV(InputBase, {\n        placeholder: \"Search Tracks\",\n        variant: \"outlined\",\n        fullWidth: true,\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 27\n        }, this),\n        sx: {\n          backgroundColor: '#f7b53b20',\n          border: '1.5px solid ##f7b53b20',\n          borderRadius: '4px',\n          fontWeight: 500,\n          paddingLeft: '6px'\n        },\n        value: search || '',\n        onChange: handleTrackSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      my: 2,\n      height: 500,\n      children: /*#__PURE__*/_jsxDEV(StyledDataGrid, {\n        columns: columns,\n        rows: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tracks, \"6G2nPasX+Y8y5Nh8hV7VylVUF6w=\", false, function () {\n  return [useQueryClient, useQuery];\n});\n\n_c = Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"sources":["/Users/sungapark/Documents/Project/lvl/lvl-ui/src/views/Tracks/index.js"],"names":["React","useState","useCallback","useQuery","useQueryClient","Box","Typography","InputAdornment","InputBase","SearchIcon","Search","StyledDataGrid","debounce","Tracks","queryClient","queryName","search","setSearch","handleTrackSearch","event","target","value","data1","console","log","url","URL","URLSearchParams","name","toString","fetch","data","columns","field","hide","headerName","flex","width","backgroundColor","borderRadius","border","fontWeight","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { useQuery, useQueryClient } from 'react-query'\n\nimport { Box, Typography, InputAdornment, InputBase  } from '@mui/material'\nimport SearchIcon from '@mui/icons-material/Search'\nimport { Search, StyledDataGrid } from '../../components'\n\nimport debounce from 'lodash.debounce'\n\nexport default function Tracks () {\n  const queryClient = useQueryClient()\n  const queryName = 'userData'\n\n  const [search, setSearch] = useState('')\n\n  const handleTrackSearch = (event) => {\n    setSearch(event.target.value)\n  }\n  const { data1 } = useQuery([queryName, search], () => {\n    console.log(search)\n    var url = new URL('http://localhost:3000/tracks')\n    url.search = new URLSearchParams({name: search}).toString()\n    return fetch(url)\n  })\n  const data = []\n\n  const columns = [\n    { field: 'id', hide: true},\n    {\n      field: 'title',\n      headerName: 'Title',\n      flex: 1\n    },\n    { field: 'albumId', hide: true},\n    { field: 'mediaTypeId', hide: true},\n    { field: 'genreId', hide: true},\n    { field: 'composer', hide: true},\n    {\n      field: 'duration',\n      headerName: 'Duration',\n      width: 200\n    },\n    {\n      field: 'size',\n      headerName: 'Size'\n    },\n    { field: 'price', hide: true}\n  ]\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" flexGrow={1}>\n      <Box my={2}>\n        <Typography variant=\"h3\">Tracks</Typography>\n      </Box>\n      <Box my={2} sx={{ backgroundColor: 'white', borderRadius: '4px' }}>\n        {/* <Search\n          value={search || ''}\n          onChange={handleTrackSearch}\n        /> */}\n        <InputBase\n          placeholder='Search Tracks'\n          variant='outlined'\n          fullWidth\n          startAdornment={<InputAdornment><SearchIcon/></InputAdornment>}\n          sx={{\n            backgroundColor: '#f7b53b20',\n            border: '1.5px solid ##f7b53b20',\n            borderRadius: '4px',\n            fontWeight: 500,\n            paddingLeft: '6px'\n          }}\n          value={search || ''}\n          onChange={handleTrackSearch}\n        />\n      </Box>\n      <Box my={2} height={500}>\n        <StyledDataGrid\n          columns={columns}\n          rows={data}\n        />\n      </Box>\n    </Box>\n  )\n}"]},"metadata":{},"sourceType":"module"}