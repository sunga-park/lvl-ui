{"ast":null,"code":"var _jsxFileName = \"/Users/sungapark/Documents/Project/lvl/lvl-ui/src/views/Tracks/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { useQueryClient } from 'react-query';\nimport { Box, InputAdornment, InputBase, Typography } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Search } from '../../components';\nimport debounce from 'lodash.debounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tracks() {\n  _s();\n\n  // const queryClient = useQueryClient()\n  // const queryName = 'trackData'\n  const [search, setSearch] = useState(''); // const refetch = () => queryClient.invalidateQueries(queryName)\n  // const debouncedTrackSearch = useCallback(debounce(refetch, 400), [])\n\n  const handleTrackSearch = event => {\n    setSearch(event.target.value); // debouncedTrackSearch(event.target.value)\n  };\n\n  const columns = [{\n    field: 'id',\n    hide: true\n  }, {\n    field: 'title',\n    headerName: 'Title'\n  }, {\n    field: 'albumId',\n    hide: true\n  }, {\n    field: 'mediaTypeId',\n    hide: true\n  }, {\n    field: 'genreId',\n    hide: true\n  }, {\n    field: 'composer',\n    hide: true\n  }, {\n    field: 'duration',\n    headerName: 'Duration'\n  }, {\n    field: 'size',\n    headerName: 'Size'\n  }, {\n    field: 'price',\n    hide: true\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      my: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      value: search || '',\n      onChange: handleTrackSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      columns: columns,\n      noRowsText: 'No Track'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tracks, \"xMSft3/sbCidYXUzqinUsZIh+qY=\");\n\n_c = Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"sources":["/Users/sungapark/Documents/Project/lvl/lvl-ui/src/views/Tracks/index.js"],"names":["React","useCallback","useState","useQueryClient","Box","InputAdornment","InputBase","Typography","DataGrid","SearchIcon","Search","debounce","Tracks","search","setSearch","handleTrackSearch","event","target","value","columns","field","hide","headerName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AAEA,SAASC,cAAT,QAA+B,aAA/B;AAEA,SAASC,GAAT,EAAcC,cAAd,EAA8BC,SAA9B,EAAyCC,UAAzC,QAA2D,eAA3D;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,eAAe,SAASC,MAAT,GAAmB;AAAA;;AAChC;AACA;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC,CAJgC,CAMhC;AACA;;AACA,QAAMa,iBAAiB,GAAIC,KAAD,IAAW;AACnCF,IAAAA,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT,CADmC,CAEnC;AACD,GAHD;;AAKA,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,IAAI,EAAE;AAArB,GADc,EAEd;AACED,IAAAA,KAAK,EAAE,OADT;AAEEE,IAAAA,UAAU,EAAE;AAFd,GAFc,EAMd;AAAEF,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,IAAI,EAAE;AAA1B,GANc,EAOd;AAAED,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,IAAI,EAAE;AAA9B,GAPc,EAQd;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,IAAI,EAAE;AAA1B,GARc,EASd;AAAED,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GATc,EAUd;AACED,IAAAA,KAAK,EAAE,UADT;AAEEE,IAAAA,UAAU,EAAE;AAFd,GAVc,EAcd;AACEF,IAAAA,KAAK,EAAE,MADT;AAEEE,IAAAA,UAAU,EAAE;AAFd,GAdc,EAkBd;AAAEF,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAlBc,CAAhB;AAqBA,sBACE,QAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,aAAa,EAAC,QAAlC;AAA2C,IAAA,QAAQ,EAAE,CAArD;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AACE,MAAA,KAAK,EAAER,MAAM,IAAI,EADnB;AAEE,MAAA,QAAQ,EAAEE;AAFZ;AAAA;AAAA;AAAA;AAAA,YAJF,eASE,QAAC,QAAD;AACE,MAAA,OAAO,EAAEI,OADX;AAEE,MAAA,UAAU,EAAE;AAFd;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAlDuBP,M;;KAAAA,M","sourcesContent":["import React, { useCallback, useState } from 'react'\n\nimport { useQueryClient } from 'react-query'\n\nimport { Box, InputAdornment, InputBase, Typography } from '@mui/material'\nimport { DataGrid } from '@mui/x-data-grid'\nimport SearchIcon from '@mui/icons-material/Search'\nimport { Search } from '../../components'\n\nimport debounce from 'lodash.debounce'\n\nexport default function Tracks () {\n  // const queryClient = useQueryClient()\n  // const queryName = 'trackData'\n\n  const [search, setSearch] = useState('')\n\n  // const refetch = () => queryClient.invalidateQueries(queryName)\n  // const debouncedTrackSearch = useCallback(debounce(refetch, 400), [])\n  const handleTrackSearch = (event) => {\n    setSearch(event.target.value)\n    // debouncedTrackSearch(event.target.value)\n  }\n\n  const columns = [\n    { field: 'id', hide: true},\n    {\n      field: 'title',\n      headerName: 'Title'\n    },\n    { field: 'albumId', hide: true},\n    { field: 'mediaTypeId', hide: true},\n    { field: 'genreId', hide: true},\n    { field: 'composer', hide: true},\n    {\n      field: 'duration',\n      headerName: 'Duration'\n    },\n    {\n      field: 'size',\n      headerName: 'Size'\n    },\n    { field: 'price', hide: true}\n  ]\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" flexGrow={1}>\n      <Box my={2}>\n        <Typography variant=\"h3\">Tracks</Typography>\n      </Box>\n      <Search\n        value={search || ''}\n        onChange={handleTrackSearch}\n      />\n      \n      <DataGrid\n        columns={columns}\n        noRowsText={'No Track'}\n      />\n    </Box>\n  )\n}"]},"metadata":{},"sourceType":"module"}